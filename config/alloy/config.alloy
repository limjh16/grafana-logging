// Reload while running by using the /-/reload endpoint (curl url:12345/-/reload or visit it on the browser)
// See: https://grafana.com/docs/alloy/v1.7/reference/http/#-reload

loki.write "local" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

loki.process "syslog" {
  forward_to = [loki.write.local.receiver]

  // structured_metadata is enabled by default, as of v1.7
  // https://grafana.com/docs/loki/v1.7/configure/#limits_config
  stage.structured_metadata {
    values = {
      severity = "",
      facility = "",
      app_name = "",
      proc_id = "",
      msg_id = "",
    }
  }
}

loki.relabel "syslog" {
  // somehow this is a required field as of v1.7 even though data never technically passes through this block...
  // see https://grafana.com/docs/alloy/v1.7/reference/components/loki/loki.relabel/#arguments
  forward_to = []

  rule {
    source_labels = ["__syslog_message_severity"]
    target_label  = "severity"
  }
  rule {
    source_labels = ["__syslog_message_facility"]
    target_label  = "facility"
  }
  rule {
    source_labels = ["__syslog_message_hostname"]
    target_label  = "hostname"
  }
  rule {
    source_labels = ["__syslog_message_app_name"]
    target_label  = "app_name"
  }
  rule {
    source_labels = ["__syslog_message_proc_id"]
    target_label  = "proc_id"
  }
  rule {
    source_labels = ["__syslog_message_msg_id"]
    target_label  = "msg_id"
  }
}

loki.source.syslog "syslog" {
  listener {
    address  = "0.0.0.0:5140"
    protocol = "tcp"
    labels   = { service_name = "loki.source.syslog", protocol = "tcp" }
    syslog_format = "rfc3164"
    // since we relabel and set hostnames as an individual label,
    // timezone problems should be easily traceable and fixable on the host device.
    // hence, use the incoming timestamp.
    use_incoming_timestamp = true
  }

  // listener {
  //   address  = "0.0.0.0:5140"
  //   protocol = "udp"
  //   labels   = { service_name = "loki.source.syslog", protocol = "udp"}
  // }

  relabel_rules = loki.relabel.syslog.rules
  forward_to = [loki.process.syslog.receiver]
}

// endpoint for raw http is http://url:5555/loki/api/v1/raw
// TODO: Properly configure labels or relabel incoming JSON, to ensure low cardinality https://grafana.com/docs/loki/latest/get-started/labels/cardinality/
loki.source.api "loki_html" {
  http {
    // listen_address is not needed since 0.0.0.0 is default
    // listen_address = "0.0.0.0"
    listen_port = "5555"
  }
  labels = {
    component = "loki.source.api", protocol = "http", service_name = "raw_http",
  }
  forward_to = [loki.write.local.receiver]
}

// docker injest, ensure that /var/run/docker.sock is bind mounted!

discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

loki.source.docker "default" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.docker.linux.targets
  labels     = {"app" = "docker"}
  forward_to = [loki.write.local.receiver]
}
